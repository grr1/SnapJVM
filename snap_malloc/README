In the original version of myMalloc.c, ARENA_SIZE was declared as a global macro, and in the ./tests/Makefile it can be seen that it is set to other than the default for some testcases (via -DARENA_SIZE). For this exact reason, the following tests fail when running the ./runtest.py: test_malloc_large, test_large, and test_all_lists; these tests pass when arena_size is set to 2147483648 in myMalloc.hpp, as opposed to the current default.

In test_out_of_ram, there is a call to the original malloc() after setting some values of rlimit (resource limits for the test case). This code originally was not object-oriented, and likely is being thrown off by having to initialize the MallocHeap object via `new` in initialize_test(). In GDB, the sizeof(mHeap) is 10,152, whereas the nearest multiple of 1024 is 10,240. Changing malloc(8) in ./tests/testsrc/test_out_of_ram.c to be higher does not seem to cause sbrk() to fail, however.
